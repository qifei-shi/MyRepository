<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--注册类-->
    <bean id="userService" class="com.kuang.service.UserServiceImpl"/>
    <bean id="beforeLog" class="com.kuang.log.BeforeLog"/>
    <bean id="afterLog" class="com.kuang.log.AfterLog"/>

    <!--方式一：使用原生Spring API-->
    <!--配置aop   需要导入aop约束-->
<!--    <aop:config>
        &lt;!&ndash;切入点 expression表达式execution(要执行的位置! * * * * *)表达式&ndash;&gt;
        <aop:pointcut id="pointcut" expression="execution(* com.kuang.service.UserServiceImpl.*(..))"/>
        
        &lt;!&ndash;执行环绕增加&ndash;&gt;
        <aop:advisor advice-ref="beforeLog" pointcut-ref="pointcut"/>
        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>
        
    </aop:config>-->

    <!--方式二：自定义类-->
<!--    <bean id="diy" class="com.kuang.DIY.DiyPointCut"/>
    <aop:config>
        &lt;!&ndash;自定义切面 ref要引用的类&ndash;&gt;
        <aop:aspect ref="diy">
            &lt;!&ndash;切入点&ndash;&gt;
            <aop:pointcut id="pointcut" expression="execution(* com.kuang.service.UserServiceImpl.*(..))"/>
            &lt;!&ndash;通知&ndash;&gt;
            <aop:before method="before" pointcut-ref="pointcut"/>
            <aop:after method="after" pointcut-ref="pointcut"/>
        </aop:aspect>
    </aop:config>-->

    <!--方式三：使用注解实现AOP-->
    <bean id="annotationPointCut" class="com.kuang.DIY.AnnotationPointCut"/>
    <!--开启注解支持  JDK(默认, proxy-target-class="false") cglib(proxy-target-class="true")-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

</beans>